{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/usePlayer.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js","img/pocoyo.jpg"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotatedTetro","map","_","index","col","row","reverse","resetPlayer","useCallback","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offset","useStage","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","cell","forEach","value","reduce","ack","findIndex","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.45550493.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      //check we are on an actual tertnomio cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          //2.check that our move is inside the game areas height(y)\n          // we shouldn't go through the bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          //3. check that our move is inside the game area width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          //4. check the cell we are moving to isnt set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            \"clear\"\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","import styled from \"styled-components\";\nimport bgImage from \"../../img/pocoyo.jpg\";\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const TETROMINOS = {\n  0: { shape: [[0]], color: \"0,0,0\" }, //for show nothing on the game screen\n  I: {\n    shape: [[0, \"I\", 0, 0], [0, \"I\", 0, 0], [0, \"I\", 0, 0], [0, \"I\", 0, 0]],\n    color: \"80, 227, 230\"\n  },\n  J: {\n    shape: [[0, \"J\", 0], [0, \"J\", 0], [0, \"J\", 0, 0], [\"J\", \"J\", 0]],\n    color: \"36, 95, 223\"\n  },\n  L: {\n    shape: [[0, \"L\", 0], [0, \"L\", 0], [0, \"L\", \"L\"]],\n    color: \"223, 173, 36\"\n  },\n  O: {\n    shape: [[\"O\", \"O\"], [\"O\", \"O\"]],\n    color: \"223, 217, 36\"\n  },\n  S: {\n    shape: [[0, \"S\", \"S\"], [\"S\", \"S\", 0], [0, 0, 0]],\n    color: \"48, 211, 56\"\n  },\n  T: {\n    shape: [[0, 0, 0], [\"T\", \"T\", \"T\"], [0, \"T\", 0]],\n    color: \"132, 61, 198\"\n  },\n  Z: {\n    shape: [[\"Z\", \"Z\", 0], [0, \"Z\", \"Z\"], [0, 0, 0]],\n    color: \"227, 78, 78\"\n  }\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = \"IJLOSTZ\";\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n","import { useState, useCallback } from \"react\";\n//usecallbcak is the standard react hook\n\nimport { TETROMINOS, randomTetromino } from \"../tetrominos\";\nimport { STAGE_WIDTH, checkCollision } from \"../gameHelpers\";\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false\n  });\n\n  //change the direction of tertomino\n  const rotate = (matrix, dir) => {\n    // amke the rows to become columns (transpose)\n    //_ means not use actual value in this loop\n    const rotatedTetro = matrix.map((_, index) =>\n      matrix.map(col => col[index])\n    );\n\n    //reverse each row to get < retated matrix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n    //to do a deep clone\n    return rotatedTetro.reverse();\n  };\n\n  const playerRotate = (stage, dir) => {\n    //to have a deep clone so that a JSON.Parse is needed\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    //to avoid the tetrios come outside of the screen frame\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      //to make the tertomino stop moving when it stucks in the middle of other tertominios\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir); //reverse the direction\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  };\n\n  //update player position\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided\n    })); //pos = position\n  };\n\n  // const playerState = useState();\n  // const player = playerState[0];\n  // const setPlayer\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelpers\";\nimport { arrayExpression } from \"babel-types\";\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0); //initial number create for set up how many rows moved and culculate scores\n\n  //to set up th interval\n  useEffect(() => {\n    setRowsCleared(0); // to send this to the useGameStatus.js\n    //to reduce the row\n    const sweepRows = (\n      newStage //ack=accumulater\n    ) =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n\n          //unshift is to make the rows disappeared and new empty rows will show up\n          ack.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []); //the empty array for stocking the accumlation\n\n    const updateStage = prevStage => {\n      //first flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\n      ); //[0 retrun empty cell]//this related to the gameHelper array\n\n      //then draw the tetromino\n      //loop\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            //give the position of x and y\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              //value is from tetromino\n              value,\n              `${player.collided ? \"merged\" : \"clear\"}`\n            ];\n          }\n        });\n      });\n      //then check if we collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.tetromino,\n    resetPlayer\n  ]);\n\n  //this return callback all the functions above\n  return [stage, setStage, rowsCleared];\n};\n","// import styled from \"styled-components\";\n\n// export const StyledStage = styled.div`\n//   display: grid;\n//   grid-template-rows: repeat(\n//     ${props => props.height},\n//     calc(25vw / ${props => props.width})\n//   );\n//   grid-template-columns: repeat(${props => props.width}, 1fr);\n//   grid-gap: 1px;\n//   border: 2px solid #333;\n//   width: 100%;\n//   may-width: 25vw;\n//   background: #111;\n// `;\n\nimport styled from \"styled-components\";\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledCell = styled.div`\n  with: auto;\n  background: rgba(${props => props.color}, 0.9);\n  border: ${props => (props.type === 0 ? \"0px solid\" : \"4px solid\")};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","import React from \"react\";\nimport { StyledCell } from \"./styles/StyledCell\";\nimport { TETROMINOS } from \"../tetrominos\";\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color}></StyledCell>\n  // <StyledCell type={\"L\"} color={TETROMINOS[\"L\"].color}></StyledCell>\n);\n\nexport default React.memo(Cell); //only re-render the cells when the cells changing, for memory the cell and only rerender when its changing\n","import React from \"react\";\nimport { StyledStage } from \"./styles/StyledStage\";\n\nimport Cell from \"./Cell\";\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from \"styled-components\";\n\nexport const StyledDisplay = styled.div`\nbox-sizing: border-box;\ndisplay: flex;\nalign-items; center;\nmargin: 0 0 20px 0;\npadding: 20px;\nborder: 4px solid #333;\nmin-height: 30px;\nwidth: 100%;\nborder-radius: 20px;\ncolor:${props => (props.gameOver ? \"red\" : \"#999\")};\nbackground: #10;\nfont-family: Pixel, Arial, Helvetica, sans-serif;\nfont-size: 1.8rem\n`;\n","import React from \"react\";\nimport { StyledDisplay } from \"./styles/StyledDisplay\";\n\nconst Display = ({ gameOver, text }) => <StyledDisplay> {text}</StyledDisplay>;\n\nexport default Display;\n","import styled from \"styled-components\";\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-size;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  boeder: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 2rem;\n  outline: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { StyledStartButton } from \"./styles/StyledStartButton\";\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;\n","import React, { useState } from \"react\";\n\nimport { createStage, checkCollision } from \"../gameHelpers\";\n// can be removed because this part has removed to the State\n\n//styled components\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\n\n//Custom Hooks\nimport { useInterval } from \"../hooks/useInterval\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\n//components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n  // console.log(createStage());\n\n  //hooks\n\n  const [dropTime, setDropTime] = useState(null); //initialized to show the text of game\n  const [gameOver, setGameOver] = useState(false); //when its false, then it turns to be gameover\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  console.log(\"re-render\");\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  }; //dir=direction\n\n  // const keyUp = ({ keyCode }) => {\n  //   if (!gameOver) {\n  //     // Activate the interval again when user releases down arrow.\n  //     if (keyCode === 40) {\n  //       setDropTime(1000 / (level + 1));\n  //     }\n  //   }\n  // };\n\n  const startGame = () => {\n    //reset everything\n    setStage(createStage()); //to make a function to create stage\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    //increase level when play has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n\n      //for increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      //game over\n      if (player.pos.y < 1) {\n        console.log(\"game over!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    console.log(\"interval on\");\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n        // drop();\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    console.log(\"interval off\");\n    setDropTime(null); // to stop the interval\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        //37 is the code for left arrow\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        //upkeyboard to change the transform\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  //for set up a dropping time for the teterminos\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score:${score}`} />\n              <Display text={`Rows:${rows}`} />\n              <Display text={`Level:${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n          {/* callback instead of onClick, because inside of startbutton is {callback} props */}\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useEffect, useCallback } from \"react\";\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200]; // means from 1 line to 4 lines cleared\n\n  const calcScore = useCallback(() => {\n    // we have score\n    if (rowsCleared > 0) {\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]); //put var into the array to change and create initial loop\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]); //as independency\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport Tetris from \"./components/Tetris\";\n\nconst App = () => (\n  <div>\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"../src/serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pocoyo.3bfdb343.jpg\";"],"sourceRoot":""}