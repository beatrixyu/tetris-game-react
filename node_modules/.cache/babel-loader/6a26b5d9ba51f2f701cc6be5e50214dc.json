{"ast":null,"code":"import _slicedToArray from \"/home/bea/Documents/bea/tetris-game/react-tetris/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bea/Documents/bea/tetris-game/react-tetris/src/components/Tetris.js\";\nimport React, { useState } from \"react\";\nimport { createStage } from \"../gameHelpers\"; // can be removed because this part has removed to the State\n//styled components\n\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\"; //Custom Hooks\n\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\"; //components\n\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n  // console.log(createStage());\n  //hooks\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropTime = _useState2[0],\n        setDropTime = _useState2[1]; //initialized to show the text of game\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameOver = _useState4[0],\n        setGameOver = _useState4[1]; //when its false, then it turns to be gameover\n\n\n  const _usePlayer = usePlayer(),\n        _usePlayer2 = _slicedToArray(_usePlayer, 3),\n        player = _usePlayer2[0],\n        updatePlayerPos = _usePlayer2[1],\n        resetPlayer = _usePlayer2[2];\n\n  const _useStage = useStage(player),\n        _useStage2 = _slicedToArray(_useStage, 2),\n        stage = _useStage2[0],\n        setStage = _useStage2[1];\n\n  console.log(\"re-render\");\n\n  const movePlayer = dir => {\n    updatePlayerPos({\n      x: dir,\n      y: 0\n    });\n  };\n\n  const startGame = () => {\n    //reset everything\n    setStage(createStage()); //to make a function to create stage\n\n    resetPlayer();\n  };\n\n  const drop = () => {\n    updatePlayerPos({\n      x: 0,\n      y: 1,\n      collided: false\n    });\n  };\n\n  const dropPlayer = () => {};\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        //37 is the code for left arrow\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      }\n    }\n  };\n\n  return React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(StyledTetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, gameOver ? React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: \"Score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Rows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Level\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    onClick: startGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/home/bea/Documents/bea/tetris-game/react-tetris/src/components/Tetris.js"],"names":["React","useState","createStage","StyledTetrisWrapper","StyledTetris","usePlayer","useStage","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","stage","setStage","console","log","movePlayer","dir","x","y","startGame","drop","collided","dropPlayer","move","keyCode","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { createStage } from \"../gameHelpers\";\n// can be removed because this part has removed to the State\n\n//styled components\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\n\n//Custom Hooks\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\n\n//components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n  // console.log(createStage());\n\n  //hooks\n  const [dropTime, setDropTime] = useState(null); //initialized to show the text of game\n  const [gameOver, setGameOver] = useState(false); //when its false, then it turns to be gameover\n\n  const [player, updatePlayerPos, resetPlayer] = usePlayer();\n  const [stage, setStage] = useStage(player);\n\n  console.log(\"re-render\");\n\n  const movePlayer = dir => {\n    updatePlayerPos({ x: dir, y: 0 });\n  };\n\n  const startGame = () => {\n    //reset everything\n    setStage(createStage()); //to make a function to create stage\n    resetPlayer();\n  };\n  const drop = () => {\n    updatePlayerPos({ x: 0, y: 1, collided: false });\n  };\n  const dropPlayer = () => {};\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        //37 is the code for left arrow\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      }\n    }\n  };\n  return (\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)}>\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text=\"Score\" />\n              <Display text=\"Rows\" />\n              <Display text=\"Level\" />\n            </div>\n          )}\n          <StartButton onClick={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n"]},"metadata":{},"sourceType":"module"}